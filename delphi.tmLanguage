<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>pas</string>
		<string>dpr</string>
		<string>dfm</string>
		<string>dpk</string>
	</array>
	<key>name</key>
	<string>Delphi</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#general</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>assembler</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(asm)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.begin.delphi</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s*|^)\b(?i:end)\b(?=\;($|\s+))</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.end.delphi</string>
						</dict>
					</dict>
					<key>name</key>
					<string>assembler.block.delphi</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.assembler.delphi</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(.*)</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>assembler2</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(asm)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.begin.delphi</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\s*|^)(?=(?i:end;))</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.end.delphi</string>
						</dict>
					</dict>
					<key>name</key>
					<string>assembler.block.delphi</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.assembler.delphi</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(.*)</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(begin)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.begin.delphi</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\W|^)(?i:end)(?=\;?($|\W))</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.end.delphi</string>
						</dict>
					</dict>
					<key>name</key>
					<string>definition.block.delphi</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tryfinalyexceptblock</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#assembler</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#case</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>calcwords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?i:(mod|shl|shr|div|ord|hi|high|lo|low|odd|pred|succ|round|trunc))\b</string>
					<key>name</key>
					<string>keyword.control.delphi</string>
				</dict>
			</array>
		</dict>
		<key>calledmethod</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?:\.)([A-Za-z_][A-Za-z0-9_]*(?=(\(|\;)))</string>
					<key>name</key>
					<string>calledmethod.delphi</string>
				</dict>
			</array>
		</dict>
		<key>case</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(case)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.begin.delphi</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\W|^)(?i:end)(?=\;($|\W))</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.end.delphi</string>
						</dict>
					</dict>
					<key>name</key>
					<string>definition.case.block.delphi</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\b(?i:(of))\b</string>
							<key>name</key>
							<string>keyword.control.delphi</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tryfinalyexceptblock</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#case</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>classdefinition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\s+\w*)(\s+=\s+)(?i:((packed\s)?(class)(\sof)?))(\((.*)\)|)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.delphi</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.delphi</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>entity.other.inherited-class.delphi</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?i:(\s*end))(\;$)|(\)\;$)|(^\s*;$)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.delphi</string>
						</dict>
					</dict>
					<key>name</key>
					<string>entity.class.interface.delphi</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#methoddeclaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#visibility</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>classdefinitionline</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.delphi</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.delphi</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>entity.other.inherited-class.delphi</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\s+\w*)(\s+=\s+)(?i:((packed\s)?(class)(\sof)?))(\((.*)\)|)(.*\;$)</string>
					<key>name</key>
					<string>entity.classline.interface.delphi</string>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.delphi</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(//).*$</string>
					<key>name</key>
					<string>comment.line.double-slash.delphi</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.delphi</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*\)</string>
					<key>name</key>
					<string>comment.block.delphi.one</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{\$</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.delphi</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>name</key>
					<string>directive.block.delphi</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.delphi</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>name</key>
					<string>comment.block.delphi.two</string>
				</dict>
			</array>
		</dict>
		<key>constant</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?i:(@|nil|true|false))\b</string>
					<key>name</key>
					<string>constant.language.delphi</string>
				</dict>
			</array>
		</dict>
		<key>dfm</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.delphi</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(?i:(item|end))\b</string>
					<key>name</key>
					<string>keyword.control.delphi</string>
				</dict>
			</array>
		</dict>
		<key>domain</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(?i:interface)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.begin.delphi</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>interface.block.delphi</string>
					<key>end</key>
					<string>\b(?i:(?=implementation))\b</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.end.delphi</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#type</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#uses</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#methoddeclaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(?i:implementation)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.begin.delphi</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>implementation.block.delphi</string>
					<key>end</key>
					<string>(?i:(?=((?m)^end)(\.$)))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.end.delphi</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#uses</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#methoddefinition</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#classdefinitionline</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#classdefinition</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#enumerated</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interfaceline</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interface</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\b(?i:^initialization)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.control.begin.delphi</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>initialization.block.delphi</string>
							<key>end</key>
							<string>\b(?i:(?=(((?m)^end)(?=\.$))|(?=finalization)))\b</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.control.end.delphi</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#line</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>\b(?i:^finalization)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.control.begin.delphi</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>finalization.block.delphi</string>
							<key>end</key>
							<string>\b(?i:(?=(((?m)^end)(?=\.$))|(?=initialization)))\b</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.control.end.delphi</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#line</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>enumerated</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\s+\w*)(\s+=\s+)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.enumerated.delphi</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\)\;\s*$)</string>
					<key>name</key>
					<string>entity.enumerated.delphi</string>
				</dict>
			</array>
		</dict>
		<key>general</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#program</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unit</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#library</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dfm</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line</string>
				</dict>
			</array>
		</dict>
		<key>interface</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\s+\w*)(\s+=\s+)(?i:(interface|dispinterface))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.interface.definition.delphi</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.delphi</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?i:(\s*end))(\;$)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.delphi</string>
						</dict>
					</dict>
					<key>name</key>
					<string>entity.interface.delphi</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#methoddeclaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>interfaceline</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\s+\w*)(\s+=\s+)(?i:(interface|dispinterface))(\;$)</string>
					<key>name</key>
					<string>entity.name.interface.delphi</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>library</key>
		<dict>
			<key>begin</key>
			<string>(?i:\blibrary\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.begin.delphi</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>program.delphi</string>
			<key>end</key>
			<string>(?i:((?m)^end)(\.$))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.end.delphi</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#methoddefinition</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i:^\bbegin\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.begin.delphi</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>program.block.delphi</string>
					<key>end</key>
					<string>(?i:(?=(((?m)^end)(?=\.$))))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.end.delphi</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#recorddefinition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#classdefinitionline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#classdefinition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#enumerated</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#proceduraltype</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#uses</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line</string>
				</dict>
			</array>
		</dict>
		<key>line</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#calledmethod</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pointer</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#pointertype</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#numeric</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#operators</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#reservedwords</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#modifier</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#constant</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>methoddeclaration</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*(?i:(class procedure|class function|function|procedure|constructor|destructor))\s+(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.delphi</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=(\;))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.function.end.delphi</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function.delphi</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\w*(?=\.)</string>
							<key>name</key>
							<string>entity.class.name.delphi</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(\.|\s*)(?=[A-Za-z_][A-Za-z0-9_]*)</string>
							<key>contentName</key>
							<string>entity.name.function.delphi</string>
							<key>end</key>
							<string>(?![A-Za-z0-9_])</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?=\:\s*)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.return.begin.delphi</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>return.type.delphi</string>
							<key>end</key>
							<string>(?=\;)</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.return.end.delphi</string>
								</dict>
							</dict>
							<key>name</key>
							<string>return.delphi</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.begin.delphi</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.function.parameters.delphi</string>
							<key>end</key>
							<string>(?=\)|\;\s*(?:\;))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#numeric</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#constant</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#string</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#paramodifer</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#comment</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>variable.parameter.function.delphi</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.parameters.delphi</string>
										</dict>
									</dict>
									<key>match</key>
									<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(?=(:|,)|(?=[\n]))</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>storage.type.delphi</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(\:)\s+\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(?=\;|\)|\s*\=)</string>
									<key>name</key>
									<string>paramtype.delphi</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>methoddefinition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=^\s*(?i:(class procedure|class function|function|procedure|constructor|destructor))\s+([A-Za-z_][A-Za-z0-9_]*))</string>
					<key>end</key>
					<string>(^end)(\;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.delphi</string>
						</dict>
					</dict>
					<key>name</key>
					<string>function.implementation.delphi</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\b(?i:(begin|end))\b</string>
							<key>name</key>
							<string>keyword.control.delphi</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#methoddeclaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tryfinalyexceptblock</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#case</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#recorddefinition</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#enumerated</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#classdefinition</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#assembler2</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>modifier</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?i:(const|var|threadvar|varargs))\b</string>
					<key>name</key>
					<string>keyword.control.delphi</string>
				</dict>
			</array>
		</dict>
		<key>numeric</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;![\d.])\s0x[a-fA-F\d]+|\b\d+(\.\d+)?([eE]-?\d+)?|\.\d+([eE]-?\d+)?</string>
					<key>name</key>
					<string>constant.numeric.delphi</string>
				</dict>
			</array>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\b(?i:(and|or|not|xor))\b)</string>
					<key>name</key>
					<string>keyword.operator.delphi</string>
				</dict>
			</array>
		</dict>
		<key>paramodifer</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?i:(const|var|out))\b</string>
					<key>name</key>
					<string>keyword.control.delphi</string>
				</dict>
			</array>
		</dict>
		<key>pointer</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>([A-Za-z_][A-Za-z0-9_]*)(?:\^)</string>
					<key>name</key>
					<string>keyword.other.pointer.delphi</string>
				</dict>
			</array>
		</dict>
		<key>pointertype</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?:\^)([A-Za-z_][A-Za-z0-9_]*)</string>
					<key>name</key>
					<string>type.pointer.delphi</string>
				</dict>
			</array>
		</dict>
		<key>proceduraltype</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\s+\w*)(\s+=\s+)(?i:(function|procedure))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>proceduraltype.name.delphi</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.delphi</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\;$)</string>
					<key>name</key>
					<string>proceduraltype.delphi</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\b(?i:(of|object))\b</string>
							<key>name</key>
							<string>keyword.control.delphi</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?=\:\s)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.return.begin.delphi</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>return.type.delphi</string>
							<key>end</key>
							<string>(?=\;)</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.return.end.delphi</string>
								</dict>
							</dict>
							<key>name</key>
							<string>return.delphi</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\b(?i:(of|object))\b</string>
									<key>name</key>
									<string>keyword.control.delphi</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.begin.delphi</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.procedural.parameters.delphi</string>
							<key>end</key>
							<string>(?=\)|\;\s*(?:\;))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>captures</key>
									<dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>procedural.paramtype.type.delphi</string>
										</dict>
									</dict>
									<key>match</key>
									<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(?=\;|\)|\s*\=)</string>
									<key>name</key>
									<string>procedural.paramtype.delphi</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>variable.parameter.procedural.delphi</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.parameters.delphi</string>
										</dict>
									</dict>
									<key>match</key>
									<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(?:(:|,)|(?=[\n]))</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#line</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>program</key>
		<dict>
			<key>begin</key>
			<string>(?i:\bprogram\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.begin.delphi</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>program.delphi</string>
			<key>end</key>
			<string>(?i:((?m)^end)(\.$))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.end.delphi</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#methoddefinition</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i:^\bbegin\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.begin.delphi</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>program.block.delphi</string>
					<key>end</key>
					<string>(?i:(?=(((?m)^end)(?=\.$))))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.end.delphi</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tryfinalyexceptblock</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#block</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#recorddefinition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#classdefinitionline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#classdefinition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#enumerated</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#proceduraltype</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#uses</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line</string>
				</dict>
			</array>
		</dict>
		<key>property</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*(?i:(property))\s+(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.property.delphi</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=(\:|\;))</string>
					<key>name</key>
					<string>meta.property.delphi</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\s*)(?=[A-Za-z_][A-Za-z0-9_]*)</string>
							<key>contentName</key>
							<string>entity.name.property.delphi</string>
							<key>end</key>
							<string>(?![A-Za-z0-9_])</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>recorddefinition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\s+\w*)(\s+=\s+)(?i:((packed\s)?(record)))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.record.definition.delphi</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.record.delphi</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?i:(\s*end)(\;$))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.delphi</string>
						</dict>
					</dict>
					<key>name</key>
					<string>entity.record.delphi</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.function.delphi</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.parameters.delphi</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(?=(:)|(?=[\n]))</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>storage.type.delphi</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\:)\s+\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(?=\;)</string>
							<key>name</key>
							<string>paramtype.delphi</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#case</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>reservedwords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?i:(exports|e?|(message?)|set of|array|file|as|for|object|goto|to|if|then|on|const|type|in|packed|inherited|until|uses|do|inline|downto|raise|while|else|is|with|label|repeat|absolute|export|abstract|external|near|read|assembler|far|nodefault|resident|at|forward|override|stored|cdecl|index|virtual|default|interrupt|write|dynamic|ab|length|size|ptr|swap|overload|break|return|local|final|unsafe|resourcestring|sealed|static|platform|requires|safecall|automated|stdcall|contains|implements|readonly|deprecated|package|register|dispid|pascal|reintroduce|writeonly|chr))\b</string>
					<key>name</key>
					<string>keyword.control.delphi</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#calcwords</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\#\$[AaBbCcDdEeFf]*)|(#\d*)</string>
					<key>name</key>
					<string>string.quoted.other.delphi</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.delphi</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(')|(
)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.delphi</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.string.end.delphi</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.delphi</string>
				</dict>
			</array>
		</dict>
		<key>tryfinalyexceptblock</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\W)(?i:try)(?=($|\W))</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.delphi.</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\b(?i:end)(?=\;?($|\W))</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.delphi.</string>
						</dict>
					</dict>
					<key>name</key>
					<string>tryfinalyexceptblock.block.delphi</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\b(?i:(finally|except))\b</string>
							<key>name</key>
							<string>keyword.control.delphi</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tryfinalyexceptblock</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#assembler</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#case</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>type</key>
		<dict>
			<key>begin</key>
			<string>\b(?i:type)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.begin.delphi</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>type.block.delphi</string>
			<key>end</key>
			<string>(?i:(?=implementation|type|uses|const|var))\b</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.end.delphi</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#methoddeclaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#recorddefinition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#classdefinitionline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#classdefinition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#enumerated</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#proceduraltype</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interfaceline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interface</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line</string>
				</dict>
			</array>
		</dict>
		<key>unit</key>
		<dict>
			<key>begin</key>
			<string>\b(?i:unit)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.begin.delphi</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>unit.block.delphi</string>
			<key>end</key>
			<string>(?i:((?m)^end))(\.$)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.end.delphi</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#domain</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#methoddefinition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line</string>
				</dict>
			</array>
		</dict>
		<key>uses</key>
		<dict>
			<key>begin</key>
			<string>\b(?i:uses)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.begin.delphi</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>uses.block.delphi</string>
			<key>end</key>
			<string>(?=\;\s*$)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>unit.delphi</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.uses.delphi</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(?=(,|;)|(?=[\n]))</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
			</array>
		</dict>
		<key>visibility</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(?i:(strict\s)?private)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.begin.delphi</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>private.block.delphi</string>
					<key>end</key>
					<string>\b(?i:(?=((strict\s)?protected|public|published)|end\;))\b</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.end.delphi</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#methoddeclaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#property</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(?i:(strict\s)?protected)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.begin.delphi</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>protected.block.delphi</string>
					<key>end</key>
					<string>\b(?i:(?=((strict\s)?private|public|published)|end\;))\b</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.end.delphi</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#methoddeclaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#property</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(?i:public)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.begin.delphi</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>public.block.delphi</string>
					<key>end</key>
					<string>\b(?i:(?=((strict\s)?private|protected|published)|end\;))\b</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.end.delphi</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#methoddeclaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#property</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(?i:published)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.begin.delphi</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>published.block.delphi</string>
					<key>end</key>
					<string>\b(?i:(?=((strict\s)?private|protected|public)|end\;))\b</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.end.delphi</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#line</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#methoddeclaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#property</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.delphi</string>
	<key>uuid</key>
	<string>38ec920b-4e04-4fc1-b21b-dd9b6a543647</string>
</dict>
</plist>
